-- phpMyAdmin SQL Dump
-- version 5.2.1
-- https://www.phpmyadmin.net/
--
-- Host: 127.0.0.1
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
-- Generation Time: Dec 05, 2023 at 03:46 AM
=======
-- Generation Time: Dec 05, 2023 at 02:55 AM
>>>>>>> 59f9b06 (updated Investment Types)
=======
-- Generation Time: Dec 08, 2023 at 05:33 PM
>>>>>>> fe463cf (db)
=======
-- Generation Time: Dec 09, 2023 at 02:20 AM
>>>>>>> 651eb28 (updated DB with procedures of Investments)
-- Server version: 10.4.28-MariaDB
-- PHP Version: 8.2.4

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `poultryfarm`
--

DELIMITER $$
--
-- Procedures
--
CREATE DEFINER=`root`@`localhost` PROCEDURE `delete_employee` (IN `user_id` VARCHAR(255))   BEGIN 
delete from userinfo where userID = user_id;

delete from useraccounts where userID = user_id;



END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `insert_employee` (IN `f_name` VARCHAR(255), IN `l_name` VARCHAR(255), IN `cnum` VARCHAR(255), IN `email` VARCHAR(255), IN `rid` VARCHAR(255), IN `uname` VARCHAR(255), IN `pass` VARCHAR(255))   BEGIN 
INSERT INTO useraccounts (userID, u_username, u_password, createdat)
VALUES ((SElect newid from newid), uname, SHA2(pass, 256), curdate());

INSERT INTO userinfo (infoID, u_firstname, u_lastname, u_contactnum, u_email, roleID, userID) 
VALUES (NULL, f_name, l_name, cnum, email, rid, (SElect newid - 1 from newid));


END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `Insert_investment` (IN `p_Name` VARCHAR(255), IN `p_typeID` INT, IN `p_recordPrice` DECIMAL(10,2))   BEGIN
    -- Declare variables for autoincrement and current date
    DECLARE newRecordID INT;
    DECLARE currentDate DATE;

    -- Set CreatedAt to the current date
    SET currentDate = CURDATE();

    -- Insert record without specifying recordID
    INSERT INTO investmentrecords (Name, typeID, recordDate, recordPrice, CreatedAt)
    VALUES (p_Name, p_typeID, currentDate, p_recordPrice, currentDate);

    -- Get the autoincremented recordID of the inserted record
    SET newRecordID = LAST_INSERT_ID();

    -- Update the recordID with the autoincremented value
    UPDATE investmentrecords
    SET recordID = newRecordID
    WHERE recordID IS NULL AND CreatedAt = currentDate;

END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `update_employee` (IN `user_id` VARCHAR(255), IN `f_name` VARCHAR(255), IN `l_name` VARCHAR(255), IN `cnum` VARCHAR(255), IN `email` VARCHAR(255), IN `rid` VARCHAR(255), IN `uname` VARCHAR(255), IN `pass` VARCHAR(255))   BEGIN 
Update useraccounts set u_username = uname, u_password = SHA2(pass, 256) where userID = user_id;

Update userinfo set u_firstname = f_name, u_lastname= l_name, u_contactnum = cnum, u_email = email, roleID = rid
where userinfo.userID = user_id;


END$$

CREATE DEFINER=`root`@`localhost` PROCEDURE `update_investment` (IN `p_recordID` INT, IN `p_Name` VARCHAR(255), IN `p_typeID` INT, IN `p_recordPrice` DECIMAL(10,2))   BEGIN
    -- Check if the record with the specified recordID exists
    IF EXISTS (SELECT 1 FROM investmentrecords WHERE recordID = p_recordID) THEN
        -- Update the record with the new values
        UPDATE investmentrecords
        SET
            Name = p_Name,
            typeID = p_typeID,
            recordPrice = p_recordPrice
        WHERE recordID = p_recordID;

        SELECT 'Record updated successfully' AS Result;
    ELSE
        SELECT 'Record not found' AS Result;
    END IF;
END$$

DELIMITER ;

-- --------------------------------------------------------

--
-- Stand-in structure for view `estimatedprofit_permonth`
-- (See below for the actual view)
--
CREATE TABLE `estimatedprofit_permonth` (
`Year` int(4)
,`Jan` decimal(45,4)
,`Feb` decimal(45,4)
,`March` decimal(45,4)
,`April` decimal(45,4)
,`May` decimal(45,4)
,`June` decimal(45,4)
,`July` decimal(45,4)
,`Aug` decimal(45,4)
,`Sept` decimal(45,4)
,`Oct` decimal(45,4)
,`Nov` decimal(45,4)
,`Decs` decimal(45,4)
,`Total` decimal(32,0)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `expenses_permonth`
-- (See below for the actual view)
--
CREATE TABLE `expenses_permonth` (
`Year` int(4)
,`Jan` decimal(32,2)
,`Feb` decimal(32,2)
,`March` decimal(32,2)
,`April` decimal(32,2)
,`May` decimal(32,2)
,`June` decimal(32,2)
,`July` decimal(32,2)
,`Aug` decimal(32,2)
,`Sept` decimal(32,2)
,`Oct` decimal(32,2)
,`Nov` decimal(32,2)
,`Decs` decimal(32,2)
,`Total` decimal(32,0)
);

-- --------------------------------------------------------

--
-- Table structure for table `investmentrecords`
--

CREATE TABLE `investmentrecords` (
  `recordID` int(11) NOT NULL,
  `Name` varchar(100) NOT NULL,
  `typeID` int(11) NOT NULL,
  `recordDate` date NOT NULL,
<<<<<<< HEAD
  `recordPrice` decimal(10,2) UNSIGNED NOT NULL CHECK (`recordPrice` >= 0)
<<<<<<< HEAD
=======
=======
  `recordPrice` decimal(10,2) UNSIGNED NOT NULL CHECK (`recordPrice` >= 0),
  `CreatedAt` date DEFAULT NULL,
  `DeletedAt` date DEFAULT NULL
>>>>>>> 651eb28 (updated DB with procedures of Investments)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `investmentrecords`
--

INSERT INTO `investmentrecords` (`recordID`, `Name`, `typeID`, `recordDate`, `recordPrice`, `CreatedAt`, `DeletedAt`) VALUES
(1, 'Electricity', 4, '2023-12-05', 4360.00, '2023-12-09', NULL),
(2, 'Water', 1, '2023-12-09', 6970.00, '2023-12-09', NULL),
(3, 'Aleister Salary', 3, '2023-12-09', 5000.00, '2023-12-09', NULL),
(4, 'Aleister Salary', 3, '2023-12-09', 5000.00, '2023-12-09', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `investmenttype`
--

CREATE TABLE `investmenttype` (
  `typeID` int(11) NOT NULL,
  `typeName` varchar(100) NOT NULL
>>>>>>> 59f9b06 (updated Investment Types)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `investmenttype`
--

INSERT INTO `investmenttype` (`typeID`, `typeName`) VALUES
(1, 'Bills'),
(2, 'MD'),
(3, 'E-Wages'),
(4, 'Miscellaneous');

-- --------------------------------------------------------

--
-- Stand-in structure for view `newid`
-- (See below for the actual view)
--
CREATE TABLE `newid` (
`newid` bigint(12)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `paperinfo`
-- (See below for the actual view)
--
CREATE TABLE `paperinfo` (
`paperID` int(11)
,`CreatedAt` timestamp
,`DeletedAt` date
,`p_typeID` int(11)
,`p_image` longblob
,`p_typeName` varchar(100)
,`p_typeDesc` text
);

-- --------------------------------------------------------

--
<<<<<<< HEAD
-- Table structure for table `investmenttype`
--

CREATE TABLE `investmenttype` (
  `typeID` int(11) NOT NULL,
  `typeName` varchar(100) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
=======
-- Dumping data for table `investmenttype`
--

INSERT INTO `investmenttype` (`typeID`, `typeName`) VALUES
(1, 'Bills'),
(2, 'Medicines & Vitamins'),
(3, 'E-Wages'),
(4, 'Miscellaneous');
>>>>>>> 59f9b06 (updated Investment Types)

-- --------------------------------------------------------

--
-- Table structure for table `paperrecords`
--

CREATE TABLE `paperrecords` (
  `paperID` int(11) NOT NULL,
  `p_typeID` int(11) NOT NULL,
  `p_image` longblob NOT NULL,
  `CreatedAt` timestamp NOT NULL DEFAULT current_timestamp() ON UPDATE current_timestamp(),
  `DeletedAt` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `paperrecords`
--

INSERT INTO `paperrecords` (`paperID`, `p_typeID`, `p_image`, `CreatedAt`, `DeletedAt`) VALUES
(1, 2, , '2023-12-08 15:55:34', '2023-12-08'),
(2, 3, , '2023-12-08 13:05:29', NULL);
INSERT INTO `paperrecords` (`paperID`, `p_typeID`, `p_image`, `CreatedAt`, `DeletedAt`) VALUES
(3, 1, , '2023-12-08 13:05:38', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `papertype`
--

CREATE TABLE `papertype` (
  `p_typeID` int(11) NOT NULL,
  `p_typeName` varchar(100) NOT NULL,
  `p_typeDesc` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `papertype`
--

INSERT INTO `papertype` (`p_typeID`, `p_typeName`, `p_typeDesc`) VALUES
(1, 'Receipt', 'A receipt is a written acknowledgment that something of value has been transferred from one party to another. In addition to the receipts consumers typically receive from vendors and service providers, receipts are also issued in business-to-business dealings as well as stock market transactions.'),
(2, 'Documents', 'A business document refers to all documents, reports, contracts, and records related to a particular business. Business documents are essential instruments for decision-making, record-keeping, and communication. They include a wide variety of written resources that support various corporate operations.'),
(3, 'Legality Paper', 'Legal paper can be defined as documents that state some contractual relationship or grants some legal rights.');

-- --------------------------------------------------------

--
-- Stand-in structure for view `pigdeceased_permonth`
-- (See below for the actual view)
--
CREATE TABLE `pigdeceased_permonth` (
`Year` int(4)
,`Jan` decimal(32,0)
,`Feb` decimal(32,0)
,`March` decimal(32,0)
,`April` decimal(32,0)
,`May` decimal(32,0)
,`June` decimal(32,0)
,`July` decimal(32,0)
,`Aug` decimal(32,0)
,`Sept` decimal(32,0)
,`Oct` decimal(32,0)
,`Nov` decimal(32,0)
,`Decs` decimal(32,0)
,`Total` decimal(32,0)
);

-- --------------------------------------------------------

--
-- Table structure for table `piglist`
--

CREATE TABLE `piglist` (
  `HouseID` int(11) NOT NULL,
  `PigCount` int(11) NOT NULL,
  `PigDeceased` int(11) NOT NULL,
  `CreatedAt` timestamp NULL DEFAULT NULL,
  `DeletedAt` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `piglist`
--

INSERT INTO `piglist` (`HouseID`, `PigCount`, `PigDeceased`, `CreatedAt`, `DeletedAt`) VALUES
(1, 10, 1, '2023-12-08 11:10:04', NULL),
(2, 15, 3, '2023-12-08 11:10:09', NULL),
(3, 15, 3, '2023-12-08 11:10:09', '2023-12-08');

-- --------------------------------------------------------

--
-- Table structure for table `pigprice`
--

CREATE TABLE `pigprice` (
  `priceID` int(11) NOT NULL,
  `priceDate` date NOT NULL,
  `price` decimal(10,2) NOT NULL,
  `CreatedAt` timestamp NULL DEFAULT NULL,
  `DeletedAt` text DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `pigprice`
--

INSERT INTO `pigprice` (`priceID`, `priceDate`, `price`, `CreatedAt`, `DeletedAt`) VALUES
(1, '2023-12-02', 130.87, '2023-12-08 11:11:14', NULL),
(2, '2023-12-08', 124.87, '2023-12-08 11:11:17', NULL);

-- --------------------------------------------------------

--
-- Table structure for table `pigsold`
--

CREATE TABLE `pigsold` (
  `soldID` int(11) NOT NULL,
  `soldCount` int(11) NOT NULL,
  `priceID` int(11) NOT NULL,
  `houseID` int(11) NOT NULL,
  `CreatedAt` timestamp NULL DEFAULT NULL,
  `DeletedAt` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

--
-- Dumping data for table `pigsold`
--

INSERT INTO `pigsold` (`soldID`, `soldCount`, `priceID`, `houseID`, `CreatedAt`, `DeletedAt`) VALUES
(1, 5, 1, 1, '2023-12-01 16:00:00', NULL),
(2, 10, 2, 2, '2023-11-30 16:00:00', NULL),
(3, 40, 2, 2, '2023-11-30 16:00:00', NULL);

-- --------------------------------------------------------

--
-- Stand-in structure for view `pigsold_permonth`
-- (See below for the actual view)
--
CREATE TABLE `pigsold_permonth` (
`Year` int(4)
,`Jan` decimal(32,0)
,`Feb` decimal(32,0)
,`March` decimal(32,0)
,`April` decimal(32,0)
,`May` decimal(32,0)
,`June` decimal(32,0)
,`July` decimal(32,0)
,`Aug` decimal(32,0)
,`Sept` decimal(32,0)
,`Oct` decimal(32,0)
,`Nov` decimal(32,0)
,`Decs` decimal(32,0)
,`Total` decimal(32,0)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `pigsprofit`
-- (See below for the actual view)
--
CREATE TABLE `pigsprofit` (
`soldID` int(11)
,`CreatedAt` timestamp
,`DeletedAt` date
,`soldCount` int(11)
,`priceID` int(11)
,`houseID` int(11)
,`priceDate` timestamp
,`datePrice` decimal(10,2)
,`profits` decimal(20,2)
);

-- --------------------------------------------------------

--
-- Stand-in structure for view `recordofprofits`
-- (See below for the actual view)
--
CREATE TABLE `recordofprofits` (
`Year` int(4)
,`Jan` decimal(43,2)
,`Feb` decimal(43,2)
,`March` decimal(43,2)
,`April` decimal(43,2)
,`May` decimal(43,2)
,`June` decimal(43,2)
,`July` decimal(43,2)
,`Aug` decimal(43,2)
,`Sept` decimal(43,2)
,`Oct` decimal(43,2)
,`Nov` decimal(43,2)
,`Decs` decimal(43,2)
,`Total` decimal(32,0)
);

-- --------------------------------------------------------

--
-- Table structure for table `useraccounts`
--

CREATE TABLE `useraccounts` (
  `userID` int(11) NOT NULL,
  `u_username` varchar(255) NOT NULL,
  `u_password` varchar(255) NOT NULL,
  `CreatedAt` date DEFAULT NULL,
  `DeletedAt` date DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

-- --------------------------------------------------------

--
-- Table structure for table `userinfo`
--

<<<<<<< HEAD
<<<<<<< HEAD
INSERT INTO `useraccounts` (`userID`, `u_username`, `u_password`) VALUES
(2, 'poultryadmin01', 'c67515a3fe5653fb72bfc7c616c9d868eecc2951c15af6c53688787af4e1a3e9'),
(3, 'poultryemp1', '561d787a6653743ee17a8865404e2ef866fe9d274e756acbb84e3be17d3fd120'),
(4, 'disbaled1', '15911aff0dc3a1c204ffd4f3803d46a3bf7ad039c5cb7b81e34906f9d0e1ecd4');
=======
INSERT INTO `useraccounts` (`userID`, `u_username`, `u_password`, `CreatedAt`, `DeletedAt`) VALUES
(2, 'poultryadmin01', 'c67515a3fe5653fb72bfc7c616c9d868eecc2951c15af6c53688787af4e1a3e9', '2023-12-08', NULL),
(3, 'poultryemp1', '561d787a6653743ee17a8865404e2ef866fe9d274e756acbb84e3be17d3fd120', '2023-12-08', NULL),
(4, '3', '7888a496b94ffb11e4c38a574507e4f6d433b8a12b1fde7e0dc345e5bf3f47da', '2023-12-08', '2023-12-13'),
(6, '324234', '382dd1a4fc426a87c339a3e74e1418edbc02e652de51aceecaade87ae79a9a95', '2023-12-08', '2023-12-08');
>>>>>>> fe463cf (db)

-- --------------------------------------------------------

--
-- Table structure for table `userinfo`
--

=======
>>>>>>> 59f9b06 (updated Investment Types)
CREATE TABLE `userinfo` (
  `infoID` int(11) NOT NULL,
  `u_firstname` varchar(255) NOT NULL,
  `u_lastname` varchar(255) NOT NULL,
  `u_contactnum` varchar(20) NOT NULL,
  `u_email` varchar(255) NOT NULL,
  `roleID` int(11) NOT NULL,
  `userID` int(11) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;

<<<<<<< HEAD
--
-- Dumping data for table `userinfo`
--

INSERT INTO `userinfo` (`infoID`, `u_firstname`, `u_lastname`, `u_contactnum`, `u_email`, `roleID`, `userID`) VALUES
(1, 'Allen', 'Ramos', '0967262339', 'ramosalleneid01@gmail.com', 0, 2),
(2, 'Aleister', 'Alinsunurin', '09763912112', 'aleister@gmail.com', 2, 3),
(3, 'Disabledw', 'Employeew', 'Choose User Type', '096675665', 0, 4);

=======
>>>>>>> 59f9b06 (updated Investment Types)
-- --------------------------------------------------------

--
-- Table structure for table `userrole`
--

CREATE TABLE `userrole` (
  `roleID` int(11) NOT NULL,
  `roleName` varchar(100) NOT NULL,
  `roleDesc` text NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_general_ci;
<<<<<<< HEAD

--
-- Dumping data for table `userrole`
--

INSERT INTO `userrole` (`roleID`, `roleName`, `roleDesc`) VALUES
(0, 'Administrator', 'Manage all Information'),
(2, 'Employee', 'Managing Some Information'),
(3, 'Disabled', 'The account cannot do anything to the system');

-- --------------------------------------------------------

--
-- Stand-in structure for view `viewusers`
-- (See below for the actual view)
--
CREATE TABLE `viewusers` (
`u_firstname` varchar(255)
,`u_lastname` varchar(255)
,`CreatedAt` date
,`DeletedAt` date
,`fullName` varchar(511)
,`u_contactnum` varchar(20)
,`u_email` varchar(255)
,`userID` int(11)
,`u_username` varchar(255)
,`u_password` varchar(255)
,`roleID` int(11)
,`roleName` varchar(100)
,`roleDesc` text
);

-- --------------------------------------------------------

--
-- Structure for view `estimatedprofit_permonth`
--
DROP TABLE IF EXISTS `estimatedprofit_permonth`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `estimatedprofit_permonth`  AS SELECT year(`pigsold`.`CreatedAt`) AS `Year`, sum(case when month(`pigsold`.`CreatedAt`) = 1 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Jan`, sum(case when month(`pigsold`.`CreatedAt`) = 2 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Feb`, sum(case when month(`pigsold`.`CreatedAt`) = 3 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `March`, sum(case when month(`pigsold`.`CreatedAt`) = 4 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `April`, sum(case when month(`pigsold`.`CreatedAt`) = 5 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `May`, sum(case when month(`pigsold`.`CreatedAt`) = 6 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `June`, sum(case when month(`pigsold`.`CreatedAt`) = 7 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `July`, sum(case when month(`pigsold`.`CreatedAt`) = 8 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Aug`, sum(case when month(`pigsold`.`CreatedAt`) = 9 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Sept`, sum(case when month(`pigsold`.`CreatedAt`) = 10 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Oct`, sum(case when month(`pigsold`.`CreatedAt`) = 11 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Nov`, sum(case when month(`pigsold`.`CreatedAt`) = 12 then `pigsold`.`soldCount` * 0.25 else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) AS `Decs`, sum(`pigsold`.`soldCount`) AS `Total` FROM `pigsold` GROUP BY year(`pigsold`.`CreatedAt`) ;

-- --------------------------------------------------------

--
-- Structure for view `expenses_permonth`
--
DROP TABLE IF EXISTS `expenses_permonth`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `expenses_permonth`  AS SELECT year(`pigsold`.`CreatedAt`) AS `Year`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 1) AS `Jan`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 2) AS `Feb`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 3) AS `March`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 4) AS `April`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 5) AS `May`, -(select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 6) AS `June`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 7) AS `July`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 8) AS `Aug`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 9) AS `Sept`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 10) AS `Oct`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 11) AS `Nov`, (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 12) AS `Decs`, sum(`pigsold`.`soldCount`) AS `Total` FROM `pigsold` GROUP BY year(`pigsold`.`CreatedAt`) ;

-- --------------------------------------------------------

--
-- Structure for view `newid`
--
DROP TABLE IF EXISTS `newid`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `newid`  AS SELECT max(`useraccounts`.`userID`) + 1 AS `newid` FROM `useraccounts` ;

-- --------------------------------------------------------

--
-- Structure for view `paperinfo`
--
DROP TABLE IF EXISTS `paperinfo`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `paperinfo`  AS SELECT `paperrecords`.`paperID` AS `paperID`, `paperrecords`.`CreatedAt` AS `CreatedAt`, `paperrecords`.`DeletedAt` AS `DeletedAt`, `paperrecords`.`p_typeID` AS `p_typeID`, `paperrecords`.`p_image` AS `p_image`, `papertype`.`p_typeName` AS `p_typeName`, `papertype`.`p_typeDesc` AS `p_typeDesc` FROM (`paperrecords` join `papertype` on(`papertype`.`p_typeID` = `paperrecords`.`p_typeID`)) ;

-- --------------------------------------------------------

--
-- Structure for view `pigdeceased_permonth`
--
DROP TABLE IF EXISTS `pigdeceased_permonth`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pigdeceased_permonth`  AS SELECT year(`piglist`.`CreatedAt`) AS `Year`, sum(case when month(`piglist`.`CreatedAt`) = 1 then `piglist`.`PigDeceased` else 0 end) AS `Jan`, sum(case when month(`piglist`.`CreatedAt`) = 2 then `piglist`.`PigDeceased` else 0 end) AS `Feb`, sum(case when month(`piglist`.`CreatedAt`) = 3 then `piglist`.`PigDeceased` else 0 end) AS `March`, sum(case when month(`piglist`.`CreatedAt`) = 4 then `piglist`.`PigDeceased` else 0 end) AS `April`, sum(case when month(`piglist`.`CreatedAt`) = 5 then `piglist`.`PigDeceased` else 0 end) AS `May`, sum(case when month(`piglist`.`CreatedAt`) = 6 then `piglist`.`PigDeceased` else 0 end) AS `June`, sum(case when month(`piglist`.`CreatedAt`) = 7 then `piglist`.`PigDeceased` else 0 end) AS `July`, sum(case when month(`piglist`.`CreatedAt`) = 8 then `piglist`.`PigDeceased` else 0 end) AS `Aug`, sum(case when month(`piglist`.`CreatedAt`) = 9 then `piglist`.`PigDeceased` else 0 end) AS `Sept`, sum(case when month(`piglist`.`CreatedAt`) = 10 then `piglist`.`PigDeceased` else 0 end) AS `Oct`, sum(case when month(`piglist`.`CreatedAt`) = 11 then `piglist`.`PigDeceased` else 0 end) AS `Nov`, sum(case when month(`piglist`.`CreatedAt`) = 12 then `piglist`.`PigDeceased` else 0 end) AS `Decs`, sum(`piglist`.`PigDeceased`) AS `Total` FROM `piglist` GROUP BY year(`piglist`.`CreatedAt`) ;

-- --------------------------------------------------------

--
-- Structure for view `pigsold_permonth`
--
DROP TABLE IF EXISTS `pigsold_permonth`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pigsold_permonth`  AS SELECT year(`pigsold`.`CreatedAt`) AS `Year`, sum(case when month(`pigsold`.`CreatedAt`) = 1 then `pigsold`.`soldCount` else 0 end) AS `Jan`, sum(case when month(`pigsold`.`CreatedAt`) = 2 then `pigsold`.`soldCount` else 0 end) AS `Feb`, sum(case when month(`pigsold`.`CreatedAt`) = 3 then `pigsold`.`soldCount` else 0 end) AS `March`, sum(case when month(`pigsold`.`CreatedAt`) = 4 then `pigsold`.`soldCount` else 0 end) AS `April`, sum(case when month(`pigsold`.`CreatedAt`) = 5 then `pigsold`.`soldCount` else 0 end) AS `May`, sum(case when month(`pigsold`.`CreatedAt`) = 6 then `pigsold`.`soldCount` else 0 end) AS `June`, sum(case when month(`pigsold`.`CreatedAt`) = 7 then `pigsold`.`soldCount` else 0 end) AS `July`, sum(case when month(`pigsold`.`CreatedAt`) = 8 then `pigsold`.`soldCount` else 0 end) AS `Aug`, sum(case when month(`pigsold`.`CreatedAt`) = 9 then `pigsold`.`soldCount` else 0 end) AS `Sept`, sum(case when month(`pigsold`.`CreatedAt`) = 10 then `pigsold`.`soldCount` else 0 end) AS `Oct`, sum(case when month(`pigsold`.`CreatedAt`) = 11 then `pigsold`.`soldCount` else 0 end) AS `Nov`, sum(case when month(`pigsold`.`CreatedAt`) = 12 then `pigsold`.`soldCount` else 0 end) AS `Decs`, sum(`pigsold`.`soldCount`) AS `Total` FROM `pigsold` GROUP BY year(`pigsold`.`CreatedAt`) ;

-- --------------------------------------------------------

--
-- Structure for view `pigsprofit`
--
DROP TABLE IF EXISTS `pigsprofit`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `pigsprofit`  AS SELECT `pigsold`.`soldID` AS `soldID`, `pigsold`.`CreatedAt` AS `CreatedAt`, `pigsold`.`DeletedAt` AS `DeletedAt`, `pigsold`.`soldCount` AS `soldCount`, `pigsold`.`priceID` AS `priceID`, `pigsold`.`houseID` AS `houseID`, `pigsold`.`CreatedAt` AS `priceDate`, (select `pigprice`.`price` from `pigprice` where `pigprice`.`priceDate` > `pigsold`.`CreatedAt` limit 1) AS `datePrice`, `pigsold`.`soldCount`* (select `pigprice`.`price` from `pigprice` where `pigprice`.`priceDate` > `pigsold`.`CreatedAt` order by `pigprice`.`priceDate` desc limit 1) AS `profits` FROM `pigsold` ;

-- --------------------------------------------------------

--
-- Structure for view `recordofprofits`
--
DROP TABLE IF EXISTS `recordofprofits`;

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `recordofprofits`  AS SELECT year(`pigsold`.`CreatedAt`) AS `Year`, sum(case when month(`pigsold`.`CreatedAt`) = 1 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 1) AS `Jan`, sum(case when month(`pigsold`.`CreatedAt`) = 2 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 2) AS `Feb`, sum(case when month(`pigsold`.`CreatedAt`) = 3 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 3) AS `March`, sum(case when month(`pigsold`.`CreatedAt`) = 4 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 4) AS `April`, sum(case when month(`pigsold`.`CreatedAt`) = 5 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 5) AS `May`, sum(case when month(`pigsold`.`CreatedAt`) = 6 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 6) AS `June`, sum(case when month(`pigsold`.`CreatedAt`) = 7 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 7) AS `July`, sum(case when month(`pigsold`.`CreatedAt`) = 8 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 8) AS `Aug`, sum(case when month(`pigsold`.`CreatedAt`) = 9 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 9) AS `Sept`, sum(case when month(`pigsold`.`CreatedAt`) = 10 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 10) AS `Oct`, sum(case when month(`pigsold`.`CreatedAt`) = 11 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 11) AS `Nov`, sum(case when month(`pigsold`.`CreatedAt`) = 12 then `pigsold`.`soldCount` else 0 end) * (select min(`pigprice`.`price`) from `pigprice`) - (select coalesce(sum(`investmentrecords`.`recordPrice`),0) from `investmentrecords` where month(`investmentrecords`.`recordDate`) = 12) AS `Decs`, sum(`pigsold`.`soldCount`) AS `Total` FROM `pigsold` GROUP BY year(`pigsold`.`CreatedAt`) ;

-- --------------------------------------------------------

--
-- Structure for view `viewusers`
--
DROP TABLE IF EXISTS `viewusers`;

<<<<<<< HEAD
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `viewusers`  AS SELECT concat(`ui`.`u_firstname`,' ',`ui`.`u_lastname`) AS `fullName`, `ui`.`u_contactnum` AS `u_contactnum`, `ui`.`u_email` AS `u_email`, `ua`.`userID` AS `userID`, `ua`.`u_username` AS `u_username`, `ua`.`u_password` AS `u_password`, `ur`.`roleID` AS `roleID`, `ur`.`roleName` AS `roleName`, `ur`.`roleDesc` AS `roleDesc` FROM ((`userinfo` `ui` join `useraccounts` `ua` on(`ua`.`userID` = `ui`.`userID`)) join `userrole` `ur` on(`ur`.`roleID` = `ui`.`roleID`)) ;
=======
>>>>>>> 59f9b06 (updated Investment Types)
=======
CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`localhost` SQL SECURITY DEFINER VIEW `viewusers`  AS SELECT `ui`.`u_firstname` AS `u_firstname`, `ui`.`u_lastname` AS `u_lastname`, `ua`.`CreatedAt` AS `CreatedAt`, `ua`.`DeletedAt` AS `DeletedAt`, concat(`ui`.`u_firstname`,' ',`ui`.`u_lastname`) AS `fullName`, `ui`.`u_contactnum` AS `u_contactnum`, `ui`.`u_email` AS `u_email`, `ua`.`userID` AS `userID`, `ua`.`u_username` AS `u_username`, `ua`.`u_password` AS `u_password`, `ur`.`roleID` AS `roleID`, `ur`.`roleName` AS `roleName`, `ur`.`roleDesc` AS `roleDesc` FROM ((`userinfo` `ui` join `useraccounts` `ua` on(`ua`.`userID` = `ui`.`userID`)) join `userrole` `ur` on(`ur`.`roleID` = `ui`.`roleID`)) ;
>>>>>>> fe463cf (db)

--
-- Indexes for dumped tables
--

--
-- Indexes for table `investmentrecords`
--
ALTER TABLE `investmentrecords`
  ADD PRIMARY KEY (`recordID`),
  ADD KEY `fk_typeID` (`typeID`);

--
-- Indexes for table `investmenttype`
--
ALTER TABLE `investmenttype`
  ADD PRIMARY KEY (`typeID`);

--
-- Indexes for table `paperrecords`
--
ALTER TABLE `paperrecords`
  ADD PRIMARY KEY (`paperID`),
  ADD KEY `fk_p_typeID` (`p_typeID`);

--
-- Indexes for table `papertype`
--
ALTER TABLE `papertype`
  ADD PRIMARY KEY (`p_typeID`);

--
-- Indexes for table `piglist`
--
ALTER TABLE `piglist`
  ADD PRIMARY KEY (`HouseID`);

--
-- Indexes for table `pigprice`
--
ALTER TABLE `pigprice`
  ADD PRIMARY KEY (`priceID`);

--
-- Indexes for table `pigsold`
--
ALTER TABLE `pigsold`
  ADD PRIMARY KEY (`soldID`),
  ADD KEY `fk_priceID` (`priceID`),
  ADD KEY `fk_houseID` (`houseID`);

--
-- Indexes for table `useraccounts`
--
ALTER TABLE `useraccounts`
  ADD PRIMARY KEY (`userID`);

--
-- Indexes for table `userinfo`
--
ALTER TABLE `userinfo`
  ADD PRIMARY KEY (`infoID`),
  ADD KEY `fk_roleID` (`roleID`),
  ADD KEY `fk_userID` (`userID`);

--
-- Indexes for table `userrole`
--
ALTER TABLE `userrole`
  ADD PRIMARY KEY (`roleID`);

--
-- AUTO_INCREMENT for dumped tables
--

--
-- AUTO_INCREMENT for table `investmentrecords`
--
ALTER TABLE `investmentrecords`
  MODIFY `recordID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;

--
-- AUTO_INCREMENT for table `investmenttype`
--
ALTER TABLE `investmenttype`
<<<<<<< HEAD
<<<<<<< HEAD
  MODIFY `typeID` int(11) NOT NULL AUTO_INCREMENT;
=======
  MODIFY `typeID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
>>>>>>> 59f9b06 (updated Investment Types)
=======
  MODIFY `typeID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
>>>>>>> fe463cf (db)

--
-- AUTO_INCREMENT for table `paperrecords`
--
ALTER TABLE `paperrecords`
  MODIFY `paperID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `papertype`
--
ALTER TABLE `papertype`
  MODIFY `p_typeID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `pigprice`
--
ALTER TABLE `pigprice`
  MODIFY `priceID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=3;

--
-- AUTO_INCREMENT for table `pigsold`
--
ALTER TABLE `pigsold`
  MODIFY `soldID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;

--
-- AUTO_INCREMENT for table `useraccounts`
--
ALTER TABLE `useraccounts`
<<<<<<< HEAD
<<<<<<< HEAD
  MODIFY `userID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
=======
  MODIFY `userID` int(11) NOT NULL AUTO_INCREMENT;
>>>>>>> 59f9b06 (updated Investment Types)
=======
  MODIFY `userID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=9;
>>>>>>> fe463cf (db)

--
-- AUTO_INCREMENT for table `userinfo`
--
ALTER TABLE `userinfo`
<<<<<<< HEAD
<<<<<<< HEAD
  MODIFY `infoID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
=======
  MODIFY `infoID` int(11) NOT NULL AUTO_INCREMENT;
>>>>>>> 59f9b06 (updated Investment Types)
=======
  MODIFY `infoID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=16;
>>>>>>> fe463cf (db)

--
-- AUTO_INCREMENT for table `userrole`
--
ALTER TABLE `userrole`
<<<<<<< HEAD
<<<<<<< HEAD
  MODIFY `roleID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=4;
=======
  MODIFY `roleID` int(11) NOT NULL AUTO_INCREMENT;
>>>>>>> 59f9b06 (updated Investment Types)
=======
  MODIFY `roleID` int(11) NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=5;
>>>>>>> fe463cf (db)

--
-- Constraints for dumped tables
--

--
-- Constraints for table `investmentrecords`
--
ALTER TABLE `investmentrecords`
  ADD CONSTRAINT `fk_typeID` FOREIGN KEY (`typeID`) REFERENCES `investmenttype` (`typeID`);

--
-- Constraints for table `paperrecords`
--
ALTER TABLE `paperrecords`
  ADD CONSTRAINT `fk_p_typeID` FOREIGN KEY (`p_typeID`) REFERENCES `papertype` (`p_typeID`);

--
-- Constraints for table `pigsold`
--
ALTER TABLE `pigsold`
  ADD CONSTRAINT `fk_houseID` FOREIGN KEY (`houseID`) REFERENCES `piglist` (`HouseID`),
  ADD CONSTRAINT `fk_priceID` FOREIGN KEY (`priceID`) REFERENCES `pigprice` (`priceID`);

--
-- Constraints for table `userinfo`
--
ALTER TABLE `userinfo`
  ADD CONSTRAINT `fk_roleID` FOREIGN KEY (`roleID`) REFERENCES `userrole` (`roleID`),
  ADD CONSTRAINT `fk_userID` FOREIGN KEY (`userID`) REFERENCES `useraccounts` (`userID`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
